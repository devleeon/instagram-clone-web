[{"/media/leeon/coding/instagram-clone/web/src/Components/App.js":"1","/media/leeon/coding/instagram-clone/web/src/Styles/GlobalStyles.js":"2","/media/leeon/coding/instagram-clone/web/src/Styles/Theme.js":"3","/media/leeon/coding/instagram-clone/web/src/Components/FeedActions.js":"4","/media/leeon/coding/instagram-clone/web/src/Routes/Feed.js":"5","/media/leeon/coding/instagram-clone/web/src/Routes/EditProfile.js":"6","/media/leeon/coding/instagram-clone/web/src/Components/Icons.js":"7","/media/leeon/coding/instagram-clone/web/src/Components/SharedQueries.js":"8","/media/leeon/coding/instagram-clone/web/src/Routes/FeedStory.js":"9","/media/leeon/coding/instagram-clone/web/src/Hooks/useInput.js":"10","/media/leeon/coding/instagram-clone/web/src/Routes/Auth/AuthQueries.js":"11","/media/leeon/coding/instagram-clone/web/src/Components/Input.js":"12","/media/leeon/coding/instagram-clone/web/src/Apollo/LocalState.js":"13","/media/leeon/coding/instagram-clone/web/src/Routes/Auth/index.js":"14","/media/leeon/coding/instagram-clone/web/src/Components/Footer.js":"15","/media/leeon/coding/instagram-clone/web/src/Hooks/useWidth.js":"16","/media/leeon/coding/instagram-clone/web/src/Routes/Auth/AuthPresenter.js":"17","/media/leeon/coding/instagram-clone/web/src/Components/Router.js":"18","/media/leeon/coding/instagram-clone/web/src/Apollo/Client.js":"19","/media/leeon/coding/instagram-clone/web/src/Routes/Explore.js":"20","/media/leeon/coding/instagram-clone/web/src/Routes/Post/index.js":"21","/media/leeon/coding/instagram-clone/web/src/Routes/Auth/AuthContainer.js":"22","/media/leeon/coding/instagram-clone/web/src/Routes/Post/PostContainer.js":"23","/media/leeon/coding/instagram-clone/web/src/Components/Button.js":"24","/media/leeon/coding/instagram-clone/web/src/Components/Loader.js":"25","/media/leeon/coding/instagram-clone/web/src/Components/Avatar.js":"26","/media/leeon/coding/instagram-clone/web/src/Routes/Profile/ProfileStyles.js":"27","/media/leeon/coding/instagram-clone/web/src/Routes/Profile/Saved.js":"28","/media/leeon/coding/instagram-clone/web/src/Routes/Profile/Posted.js":"29","/media/leeon/coding/instagram-clone/web/src/Routes/Profile/ProfileNav.js":"30","/media/leeon/coding/instagram-clone/web/src/index.js":"31","/media/leeon/coding/instagram-clone/web/src/Routes/Profile/ProfilePosts.js":"32","/media/leeon/coding/instagram-clone/web/src/Routes/Profile/index.js":"33","/media/leeon/coding/instagram-clone/web/src/Routes/Profile/ProfileHeader.js":"34","/media/leeon/coding/instagram-clone/web/src/Components/Util.js":"35","/media/leeon/coding/instagram-clone/web/src/Routes/Post/PostHeader.js":"36","/media/leeon/coding/instagram-clone/web/src/Routes/Post/PostAddComment.js":"37","/media/leeon/coding/instagram-clone/web/src/Routes/Post/PostPhotos.js":"38","/media/leeon/coding/instagram-clone/web/src/Routes/Post/PostIcons.js":"39","/media/leeon/coding/instagram-clone/web/src/Components/Header/AvatarMenu.js":"40","/media/leeon/coding/instagram-clone/web/src/Components/Header/SearchMenu.js":"41","/media/leeon/coding/instagram-clone/web/src/Components/Header/SearchInput.js":"42","/media/leeon/coding/instagram-clone/web/src/Components/Header/Styles.js":"43","/media/leeon/coding/instagram-clone/web/src/Components/Header/index.js":"44","/media/leeon/coding/instagram-clone/web/src/Routes/CreatePost.js":"45","/media/leeon/coding/instagram-clone/web/src/Components/Header/NotificationMenu.js":"46","/media/leeon/coding/instagram-clone/web/src/Styles/Username.js":"47","/media/leeon/coding/instagram-clone/web/src/Styles/Divider.js":"48","/media/leeon/coding/instagram-clone/web/src/Components/Header/HeaderContainer.js":"49","/media/leeon/coding/instagram-clone/web/src/Routes/Direct/index.js":"50","/media/leeon/coding/instagram-clone/web/src/Routes/Direct/DirectContainer.js":"51","/media/leeon/coding/instagram-clone/web/src/Routes/Direct/ChatRoom.js":"52","/media/leeon/coding/instagram-clone/web/src/Routes/Direct/Messages.js":"53","/media/leeon/coding/instagram-clone/web/src/Components/Modal.js":"54","/media/leeon/coding/instagram-clone/web/src/Routes/Direct/NewMessageModal.js":"55"},{"size":1357,"mtime":1614269759480,"results":"56","hashOfConfig":"57"},{"size":718,"mtime":1612889807209,"results":"58","hashOfConfig":"57"},{"size":609,"mtime":1614061171255,"results":"59","hashOfConfig":"57"},{"size":607,"mtime":1612891556677,"results":"60","hashOfConfig":"57"},{"size":5429,"mtime":1614583513165,"results":"61","hashOfConfig":"57"},{"size":84,"mtime":1610200542749,"results":"62","hashOfConfig":"57"},{"size":6041,"mtime":1613205479720,"results":"63","hashOfConfig":"57"},{"size":1048,"mtime":1614598685347,"results":"64","hashOfConfig":"57"},{"size":405,"mtime":1611510925830,"results":"65","hashOfConfig":"57"},{"size":295,"mtime":1611994603881,"results":"66","hashOfConfig":"57"},{"size":1226,"mtime":1613973250869,"results":"67","hashOfConfig":"57"},{"size":801,"mtime":1614180263361,"results":"68","hashOfConfig":"57"},{"size":3509,"mtime":1614594580313,"results":"69","hashOfConfig":"57"},{"size":76,"mtime":1611107830684,"results":"70","hashOfConfig":"57"},{"size":3064,"mtime":1612286845302,"results":"71","hashOfConfig":"57"},{"size":492,"mtime":1611776768049,"results":"72","hashOfConfig":"57"},{"size":6590,"mtime":1614180361422,"results":"73","hashOfConfig":"74"},{"size":1537,"mtime":1614603116833,"results":"75","hashOfConfig":"57"},{"size":1602,"mtime":1613815595427,"results":"76","hashOfConfig":"57"},{"size":105,"mtime":1612273248455,"results":"77","hashOfConfig":"57"},{"size":1824,"mtime":1614584348904,"results":"78","hashOfConfig":"57"},{"size":5913,"mtime":1614180195461,"results":"79","hashOfConfig":"57"},{"size":9366,"mtime":1614585078422,"results":"80","hashOfConfig":"57"},{"size":605,"mtime":1611424594298,"results":"81","hashOfConfig":"57"},{"size":570,"mtime":1612041624227,"results":"82","hashOfConfig":"57"},{"size":1025,"mtime":1614320486971,"results":"83","hashOfConfig":"57"},{"size":482,"mtime":1613795442228,"results":"84","hashOfConfig":"57"},{"size":1492,"mtime":1613532891535,"results":"85","hashOfConfig":"57"},{"size":1354,"mtime":1613533854961,"results":"86","hashOfConfig":"57"},{"size":1685,"mtime":1614055142257,"results":"87","hashOfConfig":"57"},{"size":307,"mtime":1612724494472,"results":"88","hashOfConfig":"57"},{"size":1174,"mtime":1613532591679,"results":"89","hashOfConfig":"57"},{"size":3091,"mtime":1614601046056,"results":"90","hashOfConfig":"57"},{"size":6103,"mtime":1614601263783,"results":"91","hashOfConfig":"57"},{"size":1651,"mtime":1614597863104,"results":"92","hashOfConfig":"57"},{"size":2683,"mtime":1614272806518,"results":"93","hashOfConfig":"57"},{"size":2582,"mtime":1614586640864,"results":"94","hashOfConfig":"57"},{"size":3238,"mtime":1614181538239,"results":"95","hashOfConfig":"57"},{"size":2715,"mtime":1614064505260,"results":"96","hashOfConfig":"57"},{"size":1600,"mtime":1614061272344,"results":"97","hashOfConfig":"57"},{"size":2019,"mtime":1614320841587,"results":"98","hashOfConfig":"57"},{"size":3632,"mtime":1614056829171,"results":"99","hashOfConfig":"57"},{"size":153,"mtime":1613834976204,"results":"100","hashOfConfig":"57"},{"size":64,"mtime":1614318067753,"results":"101","hashOfConfig":"57"},{"size":6592,"mtime":1614278058686,"results":"102","hashOfConfig":"57"},{"size":668,"mtime":1614056858392,"results":"103","hashOfConfig":"57"},{"size":120,"mtime":1614136646501,"results":"104","hashOfConfig":"74"},{"size":194,"mtime":1614061167935,"results":"105","hashOfConfig":"57"},{"size":6653,"mtime":1614318118022,"results":"106","hashOfConfig":"57"},{"size":64,"mtime":1614537441142,"results":"107","hashOfConfig":"57"},{"size":4825,"mtime":1614603976121,"results":"108","hashOfConfig":"57"},{"size":3302,"mtime":1614602182790,"results":"109","hashOfConfig":"57"},{"size":1944,"mtime":1614597134816,"results":"110","hashOfConfig":"57"},{"size":589,"mtime":1614603526257,"results":"111","hashOfConfig":"57"},{"size":1376,"mtime":1614604526052,"results":"112","hashOfConfig":"57"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hbi77v",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"1w2vdk",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"117"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"117"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/leeon/coding/instagram-clone/web/src/Components/App.js",["234","235"],"/media/leeon/coding/instagram-clone/web/src/Styles/GlobalStyles.js",[],["236","237"],"/media/leeon/coding/instagram-clone/web/src/Styles/Theme.js",[],["238","239"],"/media/leeon/coding/instagram-clone/web/src/Components/FeedActions.js",[],["240","241"],"/media/leeon/coding/instagram-clone/web/src/Routes/Feed.js",["242"],"import { gql, useQuery } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Avatar, { MyAvatar } from \"../Components/Avatar\";\nimport Footer from \"../Components/Footer\";\nimport Loader from \"../Components/Loader\";\nimport { ME } from \"../Components/SharedQueries\";\nimport useWidth from \"../Hooks/useWidth\";\nimport FeedStory from \"./FeedStory\";\nimport Post from \"./Post\";\n\nconst FEED_QUERY = gql`\n  query getFeed($limit: Int!, $offset: Int) {\n    getFeed(limit: $limit, offset: $offset) {\n      id\n      caption\n      isLiked\n      createdAt\n      location\n      isSaved\n      hasMoreComments\n      numberOfComments\n      comments {\n        text\n        user {\n          username\n        }\n        createdAt\n        id\n      }\n      likes {\n        id\n        user {\n          username\n        }\n      }\n      photos {\n        id\n        tagged {\n          user {\n            username\n          }\n        }\n        url\n      }\n      numberOfLikes\n      user {\n        avatar\n        amIFollowing\n        username\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.section`\n  padding-top: ${(props) => {\n    if (props.width < 640) {\n      return `0;`;\n    } else {\n      return `30px;`;\n    }\n  }};\n  max-width: ${(props) => props.theme.maxWidth};\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  vertical-align: top;\n`;\nconst FeedPage = styled.div`\n  max-width: ${(props) => props.theme.postMaxWidth};\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  ${(props) => {\n    if (props.width < 1000) {\n      return `margin:auto;`;\n    } else {\n      return `margin-right: 28px;`;\n    }\n  }}\n`;\nconst Etc = styled.div`\n  ${(props) => props.theme.whiteBox};\n  max-width: 290px;\n  background-color: ${(props) => props.theme.bgColor};\n  border: 0;\n  position: fixed;\n  left: ${(props) => props.width / 2 + 170}px;\n  top: 88px;\n`;\nconst Me = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: row;\n  vertical-align: center;\n  align-items: center;\n`;\nconst MeInfo = styled.div`\n  margin-left: 20px;\n  display: flex;\n  flex-direction: column;\n`;\nconst MeUsername = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n`;\nconst MeName = styled.div`\n  font-size: 18px;\n  color: ${(props) => props.theme.darkGreyColor};\n  font-weight: 300;\n`;\nconst LinkWrapper = styled(Link)`\n  color: black;\n`;\nfunction Feed() {\n  const [limit, setLimit] = useState(5);\n  const [hasMore, setHasMore] = useState(true);\n  const { loading, data, fetchMore } = useQuery(FEED_QUERY, {\n    variables: { limit, offset: 0 },\n    fetchPolicy: \"cache-and-network\",\n  });\n  const { data: meData } = useQuery(ME);\n  const width = useWidth();\n  // const handleScroll = () => {\n  //   const scrollHeight = document.documentElement.scrollHeight;\n  //   const scrollTop = document.documentElement.scrollTop;\n  //   const clientHeight = document.documentElement.clientHeight;\n  //   if (scrollTop + clientHeight >= scrollHeight && loading === false) {\n  //   }\n  // };\n  // useEffect(() => {\n  //   // scroll event listener 등록\n  //   window.addEventListener(\"scroll\", handleScroll);\n  //   return () => {\n  //     // scroll event listener 해제\n  //     window.removeEventListener(\"scroll\", handleScroll);\n  //   };\n  // });\n  if (loading || !data || !meData) {\n    return <Loader />;\n  } else {\n    const { getFeed } = data;\n    const { me } = meData;\n    if (getFeed.length > 5) {\n      setHasMore(true);\n    }\n    return (\n      <>\n        <Wrapper width={width}>\n          <FeedPage width={width}>\n            <FeedStory />\n            {getFeed.length > 0\n              ? getFeed.map((post, index) => {\n                  return <Post key={index} id={post.id} />;\n                })\n              : \"There is NO post to show. Let's post something\"}\n            {hasMore && (\n              <button\n                onClick={() => {\n                  const currentLength = getFeed.length;\n                  fetchMore({\n                    variables: {\n                      offset: getFeed.length,\n                      limit: 5,\n                    },\n                  }).then((fetchMoreResult) => {\n                    // Update variables.limit for the original query to include\n                    // the newly added feed items.\n                    console.log(fetchMoreResult);\n                    if (fetchMoreResult.data.getFeed.length.length < limit) {\n                      setHasMore(false);\n                    }\n                    setLimit(\n                      currentLength + fetchMoreResult.data.getFeed.length\n                    );\n                  });\n                }}\n              >\n                load more\n              </button>\n            )}\n          </FeedPage>\n          {width < 1000 ? null : (\n            <Etc width={width}>\n              <Me>\n                <LinkWrapper to={`/${me.username}`}>\n                  <MyAvatar size={56} />\n                </LinkWrapper>\n                <MeInfo>\n                  <LinkWrapper to={`/${me.username}`}>\n                    <MeUsername>{me.username}</MeUsername>\n                  </LinkWrapper>\n                  <MeName>{me.fullname}</MeName>\n                </MeInfo>\n              </Me>\n              <Footer feed={true} />\n            </Etc>\n          )}\n        </Wrapper>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default Feed;\n","/media/leeon/coding/instagram-clone/web/src/Routes/EditProfile.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Icons.js",[],["243","244"],"/media/leeon/coding/instagram-clone/web/src/Components/SharedQueries.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/FeedStory.js",[],"/media/leeon/coding/instagram-clone/web/src/Hooks/useInput.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Auth/AuthQueries.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Input.js",[],"/media/leeon/coding/instagram-clone/web/src/Apollo/LocalState.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Auth/index.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Footer.js",[],["245","246"],"/media/leeon/coding/instagram-clone/web/src/Hooks/useWidth.js",[],["247","248"],"/media/leeon/coding/instagram-clone/web/src/Routes/Auth/AuthPresenter.js",[],["249","250"],"/media/leeon/coding/instagram-clone/web/src/Components/Router.js",[],"/media/leeon/coding/instagram-clone/web/src/Apollo/Client.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Explore.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Post/index.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Auth/AuthContainer.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Post/PostContainer.js",["251"],"import { useMutation } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Avatar from \"../../Components/Avatar\";\nimport { LIKE } from \"../../Components/SharedQueries\";\nimport { full_date, timeSince } from \"../../Components/Util\";\nimport { Divider } from \"../../Styles/Divider\";\nimport PostAddComment from \"./PostAddComment\";\nimport PostHeader from \"./PostHeader\";\nimport PostIcons from \"./PostIcons\";\nimport PostPhotos from \"./PostPhotos\";\nconst Wrapper = styled.article`\n  ${(props) => props.theme.whiteBox};\n  margin-top: 40px;\n  display: flex;\n  flex-direction: row;\n`;\nconst FeedWrapper = styled.article`\n  ${(props) => props.theme.whiteBox};\n  margin-bottom: 40px;\n  display: flex;\n  flex-direction: column;\n`;\nconst Photos = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  max-width: 598px;\n  max-height: 598px;\n`;\nconst FeedPhotos = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  max-width: 614px;\n  max-height: 614px;\n`;\nconst Sections = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  ${(props) => (props.maxWidth ? `max-width: ${props.maxWidth}px;` : null)};\n  max-height: 598px;\n`;\nconst AvatarWrapper = styled.div`\n  margin-right: 14px;\n`;\nconst CreatedTime = styled.section`\n  display: flex;\n  color: ${(props) => props.theme.darkGreyColor};\n  font-size: 10px;\n  padding: 0 16px;\n  margin-top: 5px;\n  text-transform: uppercase;\n  a {\n    color: ${(props) => props.theme.darkGreyColor};\n  }\n  :hover {\n    span {\n      visibility: visible;\n    }\n  }\n  order: ${(props) => props.order};\n`;\nconst CreatedDate = styled.span`\n  position: absolute;\n  visibility: hidden;\n  width: 120px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n  z-index: 1;\n`;\nconst NumberOfLikes = styled.section`\n  display: flex;\n  font-size: 16px;\n  padding: 0 16px 5px 16px;\n  strong {\n    font-weight: 600;\n  }\n  order: ${(props) => props.order};\n`;\nconst Comments = styled.section`\n  padding: 0 16px;\n  display: flex;\n  order: ${(props) => props.order};\n  ${(props) => (props.order === 2 ? `padding: 16px;` : null)};\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  flex-direction: column;\n  height: 100%;\n`;\nconst Comment = styled.div`\n  display: flex;\n  flex-direction: row;\n  vertical-align: center;\n  padding-bottom: 16px;\n`;\nconst Text = styled.div`\n  padding: 0;\n  line-height: 1.3em;\n  display: block;\n  position: relative;\n`;\nconst Username = styled.span`\n  margin-right: 6px;\n  a {\n    font-size: 15px;\n    font-weight: 600;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    padding-left: 5px;\n    margin-left: -5px;\n  }\n`;\nconst TextCreated = styled.div`\n  color: ${(props) => props.theme.darkGreyColor};\n  font-size: 10px;\n  margin-top: 5px;\n  text-transform: uppercase;\n`;\nconst Caption = styled.span`\n  vertical-align: baseline;\n  overflow-wrap: break-word;\n  span {\n    white-space: pre-wrap;\n  }\n`;\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nfunction PostContainer({\n  id,\n  user,\n  isLiked,\n  isSaved,\n  photos,\n  createdAt,\n  numberOfLikes,\n  caption,\n  location,\n  comments,\n  fetchMoreComments,\n}) {\n  const { postId } = useParams();\n  const [likesCount, setLikesCount] = useState(numberOfLikes);\n  const [liked, setLiked] = useState(isLiked);\n  const [limit, setLimit] = useState(5);\n\n  const timeAgo = timeSince(createdAt);\n  const createdDate = full_date(createdAt);\n  const captionArr = caption.split(\" \", 20).join(\" \");\n\n  const [toggleLike] = useMutation(LIKE, {\n    variables: { postId: id },\n    update: ({ loading }) => {\n      if (loading) {\n      }\n      liked ? setLikesCount(likesCount - 1) : setLikesCount(likesCount + 1);\n      setLiked(!liked);\n    },\n  });\n\n  const TOTAL_SLIDES = photos.length;\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const nextSlide = () => {\n    if (currentSlide !== TOTAL_SLIDES - 1) {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n  const prevSlide = () => {\n    if (currentSlide !== 0) {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n  useEffect(() => {}, [comments, limit]);\n  if (postId) {\n    return (\n      <Wrapper>\n        <Helmet>\n          <title>\n            {caption === \"\"\n              ? `Instagram photo by ${\n                  user.fullname ? user.fullname : `@${user.username}`\n                }`\n              : user.fullname\n              ? `${user.fullname} on Instagram: ${caption}`\n              : `@${user.username}`}\n          </title>\n        </Helmet>\n        <Photos>\n          <PostPhotos\n            toggleLike={toggleLike}\n            photos={photos}\n            prevSlide={prevSlide}\n            nextSlide={nextSlide}\n            currentSlide={currentSlide}\n          />\n        </Photos>\n        <Sections maxWidth={335}>\n          <PostHeader\n            username={user.username}\n            avatar={user.avatar}\n            amIFollowing={user.amIFollowing}\n            isSelf={user.isSelf}\n            location={location}\n          />\n          <Divider />\n          <Comments order={2}>\n            {caption !== \"\" && (\n              <Comment>\n                <AvatarWrapper>\n                  <Avatar src={user.avatar} size={38} />\n                </AvatarWrapper>\n                <TextWrapper>\n                  <Text>\n                    <Username>\n                      <Link to={`/${user.username}`}>{user.username}</Link>\n                    </Username>\n                    <Caption>\n                      <span>{caption}</span>\n                    </Caption>\n                  </Text>\n                  <TextCreated> {timeAgo}</TextCreated>\n                </TextWrapper>\n              </Comment>\n            )}\n            {comments.hasMore ? (\n              <button\n                onClick={() => {\n                  const currentLength = comments.comments.length;\n                  fetchMoreComments({\n                    variables: { postId: id, limit: 5, offset: currentLength },\n                  }).then(({ data }) => {\n                    setLimit(currentLength + data.getMoreComments.length);\n                  });\n                }}\n              >\n                {\" \"}\n                +{\" \"}\n              </button>\n            ) : null}\n            {comments.comments.map((comment, index) => {\n              return (\n                <Comment key={index}>\n                  <AvatarWrapper>\n                    <Avatar src={comment.user.avatar} size={38} />\n                  </AvatarWrapper>\n                  <Text>\n                    <Username>\n                      <Link to={`/${comment.user.username}`}>\n                        {comment.user.username}\n                      </Link>\n                    </Username>\n                    <Caption>\n                      <span>{comment.text}</span>\n                    </Caption>\n                    <TextCreated>\n                      {timeSince(new Date(comment.createdAt * 1))}\n                    </TextCreated>\n                  </Text>\n                </Comment>\n              );\n            })}\n          </Comments>\n\n          <PostIcons\n            order={3}\n            id={id}\n            isSaved={isSaved}\n            liked={liked}\n            toggleLike={toggleLike}\n            photos={photos}\n            currentSlide={currentSlide}\n          />\n          <NumberOfLikes order={4}>\n            <strong>{likesCount} likes</strong>\n          </NumberOfLikes>\n          <CreatedTime order={5}>{createdDate}</CreatedTime>\n          <PostAddComment order={6} id={id} />\n        </Sections>\n      </Wrapper>\n    );\n  } else {\n    return (\n      <FeedWrapper>\n        <PostHeader username={user.username} avatar={user.avatar} />\n\n        <FeedPhotos>\n          <PostPhotos\n            toggleLike={toggleLike}\n            photos={photos}\n            prevSlide={prevSlide}\n            nextSlide={nextSlide}\n            currentSlide={currentSlide}\n          />\n        </FeedPhotos>\n        <Sections>\n          <PostIcons\n            order={2}\n            id={id}\n            isSaved={isSaved}\n            liked={liked}\n            toggleLike={toggleLike}\n            photos={photos}\n            currentSlide={currentSlide}\n          />\n          {likesCount > 0 && (\n            <NumberOfLikes order={3}>\n              <strong>{likesCount} likes</strong>\n            </NumberOfLikes>\n          )}\n          {/* {fetchmore } */}\n\n          <CreatedTime order={5}>\n            <Link to={`/p/${id}`}>{timeAgo} ago</Link>\n          </CreatedTime>\n\n          <PostAddComment order={6} id={id} />\n          <Comments order={4}>\n            <Text>\n              <Username>\n                <Link to={`/${user.username}`}>{user.username}</Link>\n              </Username>\n              <Caption>\n                <span>\n                  {caption.length > 200 ? captionArr + \" ... \" : caption}\n                  {caption.length > 200 && <button>see more</button>}\n                </span>\n              </Caption>\n            </Text>\n            {comments.comments.map((c) => {\n              return null;\n            })}\n          </Comments>\n        </Sections>\n      </FeedWrapper>\n    );\n  }\n}\n\nexport default PostContainer;\n","/media/leeon/coding/instagram-clone/web/src/Components/Button.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Loader.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Avatar.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Profile/ProfileStyles.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Profile/Saved.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Profile/Posted.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Profile/ProfileNav.js",[],"/media/leeon/coding/instagram-clone/web/src/index.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Profile/ProfilePosts.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Profile/index.js",["252","253"],"/media/leeon/coding/instagram-clone/web/src/Routes/Profile/ProfileHeader.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Util.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Post/PostHeader.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Post/PostAddComment.js",["254","255","256"],"import { useMutation } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { ADD_COMMENT, GET_COMMENT } from \"../../Components/SharedQueries\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nconst Wrapper = styled.section`\n  bottom: 0;\n  margin-top: 8px;\n  border-top: 1px solid rgba(239, 239, 239, 1);\n  order: ${(props) => props.order};\n  align-items: stretch;\n  box-sizing: border-box;\n  display: flex;\n  position: relative;\n  flex-shrink: 0;\n  font-size: 14px;\n`;\nconst AddComment = styled.form`\n  padding: 0 16px;\n  border: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  vertical-align: center;\n  align-items: center;\n`;\nconst InputComment = styled(TextareaAutosize)`\n  width: 100%;\n  font-size: 14px;\n  height: 20px;\n  border: 0;\n  resize: none;\n  overflow: hidden;\n  &:focus {\n    outline: none;\n  }\n`;\nconst PostButton = styled.button`\n  border: 0;\n  border-radius: ${(props) => props.theme.borderRadius};\n  background-color: white;\n  height: 35px;\n  font-size: 15px;\n  padding: 0;\n  color: ${(props) => props.theme.blueColor};\n  text-align: center;\n  font-weight: 600;\n  text-transform: capitalize;\n  ${(props) => {\n    if (props.isEmpty) {\n      return `opacity: 0.3;  pointer-events: none;`;\n    }\n  }};\n  :focus {\n    outline: none;\n  }\n`;\nfunction PostAddComment({ order, id }) {\n  const { register, watch, handleSubmit, setValue, control } = useForm();\n  const text = watch(\"text\");\n  const [addComment] = useMutation(ADD_COMMENT, {\n    variables: { text, postId: id },\n    refetchQueries: [{ query: GET_COMMENT, variables: { postId: id } }],\n  });\n\n  const handleAddComment = async (e) => {\n    await addComment();\n    setValue(\"text\", \"\");\n  };\n\n  const onKeyDown = async (e) => {\n    const { keyCode } = e;\n    if (keyCode === 13 && !e.shiftKey) {\n      e.preventDefault();\n      await addComment();\n      setValue(\"text\", \"\");\n    }\n  };\n  useEffect(() => {\n    if (watch(\"text\").includes(\"@\")) {\n      console.log(\"@\");\n    }\n  }, [watch()]);\n  return (\n    <Wrapper order={order}>\n      <AddComment onSubmit={handleSubmit(handleAddComment)}>\n        <InputComment\n          ref={register}\n          name=\"text\"\n          maxRows={3}\n          onKeyDown={onKeyDown}\n        />\n        <PostButton\n          ref={register}\n          name=\"button\"\n          text={\"post\"}\n          isEmpty={text === \"\" || text === undefined}\n        >\n          post\n        </PostButton>\n      </AddComment>\n    </Wrapper>\n  );\n}\n\nexport default PostAddComment;\n","/media/leeon/coding/instagram-clone/web/src/Routes/Post/PostPhotos.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Post/PostIcons.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Header/AvatarMenu.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Header/SearchMenu.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Header/SearchInput.js",["257"],"import { gql, useLazyQuery } from \"@apollo/client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport useInput from \"../../Hooks/useInput\";\nimport SearchMenu from \"./SearchMenu\";\nimport { Menu } from \"./Styles\";\n\nconst SEARCH = gql`\n  query searchUsers($query: String!) {\n    searchUsers(query: $query) {\n      username\n      avatar\n      fullname\n    }\n  }\n`;\nconst SearchBoxCover = styled.div`\n  ${(props) => props.theme.whiteBox}\n  background-color: ${(props) => props.theme.bgColor};\n  height: 28px;\n  width: 215px;\n  margin: auto;\n  flex: 0 1 auto;\n  display: flex;\n  padding: 0;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: text;\n`;\nconst SearchText = styled.div`\n  justify-content: center;\n  text-align: center;\n  width: 170px;\n  display: ${(props) => {\n    return props.showing ? `block` : `none`;\n  }};\n`;\nconst SearchBox = styled.input`\n  border: 0;\n  background-color: ${(props) => props.theme.bgColor};\n  height: 25px;\n  width: 170px;\n  margin: auto;\n  display: ${(props) => {\n    return props.showing ? `block` : `none`;\n  }};\n  position: absolute;\n  font-size: 12px;\n  z-index: 3;\n`;\nconst CancelSearch = styled.button`\n  display: ${(props) => {\n    return props.showing ? `flex` : `none`;\n  }};\n  align-self: flex-end;\n  transform: translate(-50%);\n  border: 0;\n  border-radius: 50%;\n  background-color: ${(props) => props.theme.darkGreyColor};\n  color: white;\n  font-weight: 700;\n  z-index: 3;\n  cursor: pointer;\n  :focus {\n    outline: none;\n  }\n`;\nfunction SearchInput() {\n  const searchInput = useInput(\"\");\n  const searchInputRef = useRef();\n  const [search, setSearch] = useState(false);\n  const [searchMenu, setSearchMenu] = useState(false);\n  const [searchUsers, { data, loading }] = useLazyQuery(SEARCH, {\n    variables: {\n      query: searchInput.value,\n    },\n  });\n  const HandleOnChange = (e) => {\n    if (e.target.value === \"\") {\n      setSearchMenu(false);\n    } else if (search) {\n      setSearchMenu(true);\n      searchUsers();\n    }\n    searchInput.onChange(e);\n  };\n  useEffect(() => {\n    const handleSearch = (e) => {\n      if (!searchInputRef.current.contains(e.target)) {\n        setSearch(false);\n        setSearchMenu(false);\n      }\n    };\n    const hadleLoad = () => {\n      searchInput.setValue(\"\");\n    };\n    if (search) {\n      window.addEventListener(\"click\", handleSearch);\n      searchInputRef.current.focus();\n    }\n    if (searchInput.value) window.addEventListener(\"popstate\", hadleLoad);\n    return () => {\n      if (search) window.removeEventListener(\"click\", handleSearch);\n      if (searchInput.value) window.removeEventListener(\"popstate\", hadleLoad);\n    };\n  }, [search, searchInput]);\n  return (\n    <SearchBoxCover\n      onClick={() => {\n        setSearch(true);\n        if (searchInput.value !== \"\") {\n          setSearchMenu(true);\n        }\n      }}\n    >\n      <SearchText showing={!search}>\n        {searchInput.value === \"\" ? \"SEARCH\" : `${searchInput.value}`}\n      </SearchText>\n      <SearchBox\n        ref={searchInputRef}\n        showing={search}\n        placeholder=\"search\"\n        value={searchInput.value}\n        onChange={HandleOnChange}\n      />\n      <CancelSearch\n        showing={search}\n        onClick={() => {\n          setSearch(false);\n          searchInput.setValue(\"\");\n        }}\n      >\n        x\n      </CancelSearch>\n      <Menu showing={searchMenu}>\n        {data && !loading && <SearchMenu users={data.searchUsers} />}\n      </Menu>\n    </SearchBoxCover>\n  );\n}\n\nexport default SearchInput;\n","/media/leeon/coding/instagram-clone/web/src/Components/Header/Styles.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Header/index.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/CreatePost.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Header/NotificationMenu.js",[],"/media/leeon/coding/instagram-clone/web/src/Styles/Username.js",[],"/media/leeon/coding/instagram-clone/web/src/Styles/Divider.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Header/HeaderContainer.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Direct/index.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Direct/DirectContainer.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Direct/ChatRoom.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Direct/Messages.js",[],"/media/leeon/coding/instagram-clone/web/src/Components/Modal.js",[],"/media/leeon/coding/instagram-clone/web/src/Routes/Direct/NewMessageModal.js",[],{"ruleId":"258","severity":1,"message":"259","line":1,"column":10,"nodeType":"260","messageId":"261","endLine":1,"endColumn":13},{"ruleId":"258","severity":1,"message":"262","line":1,"column":15,"nodeType":"260","messageId":"261","endLine":1,"endColumn":23},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"263","replacedBy":"267"},{"ruleId":"265","replacedBy":"268"},{"ruleId":"263","replacedBy":"269"},{"ruleId":"265","replacedBy":"270"},{"ruleId":"258","severity":1,"message":"271","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":14},{"ruleId":"263","replacedBy":"272"},{"ruleId":"265","replacedBy":"273"},{"ruleId":"263","replacedBy":"274"},{"ruleId":"265","replacedBy":"275"},{"ruleId":"263","replacedBy":"276"},{"ruleId":"265","replacedBy":"277"},{"ruleId":"263","replacedBy":"278"},{"ruleId":"265","replacedBy":"279"},{"ruleId":"258","severity":1,"message":"280","line":67,"column":7,"nodeType":"260","messageId":"261","endLine":67,"endColumn":18},{"ruleId":"258","severity":1,"message":"281","line":32,"column":10,"nodeType":"260","messageId":"261","endLine":32,"endColumn":15},{"ruleId":"258","severity":1,"message":"282","line":32,"column":17,"nodeType":"260","messageId":"261","endLine":32,"endColumn":25},{"ruleId":"258","severity":1,"message":"283","line":61,"column":52,"nodeType":"260","messageId":"261","endLine":61,"endColumn":59},{"ruleId":"284","severity":1,"message":"285","line":85,"column":6,"nodeType":"286","endLine":85,"endColumn":15,"suggestions":"287"},{"ruleId":"284","severity":1,"message":"288","line":85,"column":7,"nodeType":"289","endLine":85,"endColumn":14},{"ruleId":"258","severity":1,"message":"290","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":21},"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","no-native-reassign",["291"],"no-negated-in-lhs",["292"],["291"],["292"],["291"],["292"],"'Avatar' is defined but never used.",["291"],["292"],["291"],["292"],["291"],["292"],["291"],["292"],"'CreatedDate' is assigned a value but never used.","'limit' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'control' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'watch'. Either include it or remove the dependency array.","ArrayExpression",["293"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},"Update the dependencies array to be: [watch]",{"range":"296","text":"297"},[2068,2077],"[watch]"]