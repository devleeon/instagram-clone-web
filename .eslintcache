[{"/media/leeon/coding/js/instagram-clone/web/src/index.js":"1","/media/leeon/coding/js/instagram-clone/web/src/Styles/GlobalStyles.js":"2","/media/leeon/coding/js/instagram-clone/web/src/Apollo/LocalState.js":"3","/media/leeon/coding/js/instagram-clone/web/src/Routes/EditProfile.js":"4","/media/leeon/coding/js/instagram-clone/web/src/Routes/Feed.js":"5","/media/leeon/coding/js/instagram-clone/web/src/Components/Header/index.js":"6","/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/index.js":"7","/media/leeon/coding/js/instagram-clone/web/src/Components/Avatar.js":"8","/media/leeon/coding/js/instagram-clone/web/src/Components/SharedQueries.js":"9","/media/leeon/coding/js/instagram-clone/web/src/Components/Header/HeaderContainer.js":"10","/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/Saved.js":"11","/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/ProfileNav.js":"12","/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/ProfileHeader.js":"13","/media/leeon/coding/js/instagram-clone/web/src/Components/Header/SearchInput.js":"14","/media/leeon/coding/js/instagram-clone/web/src/Components/Header/Styles.js":"15","/media/leeon/coding/js/instagram-clone/web/src/Components/Header/NotificationMenu.js":"16","/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/PostPhotos.js":"17","/media/leeon/coding/js/instagram-clone/web/src/Routes/Auth/AuthQueries.js":"18","/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/PostHeader.js":"19","/media/leeon/coding/js/instagram-clone/web/src/Components/Header/SearchMenu.js":"20","/media/leeon/coding/js/instagram-clone/web/src/Components/Input.js":"21","/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/ModalMenu.js":"22","/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/index.js":"23","/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/PostContainer.js":"24","/media/leeon/coding/js/instagram-clone/web/src/Components/App.js":"25","/media/leeon/coding/js/instagram-clone/web/src/Components/FeedActions.js":"26","/media/leeon/coding/js/instagram-clone/web/src/Components/Footer.js":"27","/media/leeon/coding/js/instagram-clone/web/src/Routes/Direct/DirectContainer.js":"28","/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/Posted.js":"29","/media/leeon/coding/js/instagram-clone/web/src/Routes/FeedStory.js":"30","/media/leeon/coding/js/instagram-clone/web/src/Hooks/useWidth.js":"31","/media/leeon/coding/js/instagram-clone/web/src/Components/Util.js":"32","/media/leeon/coding/js/instagram-clone/web/src/Routes/Direct/ChatRoom.js":"33","/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/PostIcons.js":"34","/media/leeon/coding/js/instagram-clone/web/src/Hooks/useInput.js":"35","/media/leeon/coding/js/instagram-clone/web/src/Routes/Direct/Messages.js":"36","/media/leeon/coding/js/instagram-clone/web/src/Components/Button.js":"37","/media/leeon/coding/js/instagram-clone/web/src/Components/Router.js":"38","/media/leeon/coding/js/instagram-clone/web/src/Routes/Auth/index.js":"39","/media/leeon/coding/js/instagram-clone/web/src/Components/Loader.js":"40","/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/ProfileStyles.js":"41","/media/leeon/coding/js/instagram-clone/web/src/Routes/Auth/AuthContainer.js":"42","/media/leeon/coding/js/instagram-clone/web/src/Styles/Username.js":"43","/media/leeon/coding/js/instagram-clone/web/src/Styles/Divider.js":"44","/media/leeon/coding/js/instagram-clone/web/src/Routes/Explore.js":"45","/media/leeon/coding/js/instagram-clone/web/src/Routes/Direct/index.js":"46","/media/leeon/coding/js/instagram-clone/web/src/Components/Icons.js":"47","/media/leeon/coding/js/instagram-clone/web/src/Routes/Direct/NewMessageModal.js":"48","/media/leeon/coding/js/instagram-clone/web/src/Apollo/Client.js":"49","/media/leeon/coding/js/instagram-clone/web/src/Components/Modal.js":"50","/media/leeon/coding/js/instagram-clone/web/src/Routes/CreatePost.js":"51","/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/ProfilePosts.js":"52","/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/PostAddComment.js":"53","/media/leeon/coding/js/instagram-clone/web/src/Routes/Auth/AuthPresenter.js":"54","/media/leeon/coding/js/instagram-clone/web/src/Styles/Theme.js":"55","/media/leeon/coding/js/instagram-clone/web/src/Hooks/useScrollEnd.js":"56","/media/leeon/coding/js/instagram-clone/web/src/Components/Header/AvatarMenu.js":"57","/media/leeon/coding/js/instagram-clone/web/src/Components/Spinner.js":"58","/media/leeon/coding/js/instagram-clone/web/src/Components/ToggleFollow.js":"59"},{"size":307,"mtime":1612724494472,"results":"60","hashOfConfig":"61"},{"size":672,"mtime":1617460248157,"results":"62","hashOfConfig":"61"},{"size":3748,"mtime":1617129132113,"results":"63","hashOfConfig":"61"},{"size":84,"mtime":1610200542749,"results":"64","hashOfConfig":"61"},{"size":4772,"mtime":1617460302570,"results":"65","hashOfConfig":"61"},{"size":64,"mtime":1614318067753,"results":"66","hashOfConfig":"61"},{"size":3022,"mtime":1617124224043,"results":"67","hashOfConfig":"61"},{"size":1025,"mtime":1614320486971,"results":"68","hashOfConfig":"61"},{"size":1317,"mtime":1617124714513,"results":"69","hashOfConfig":"61"},{"size":7766,"mtime":1617460219524,"results":"70","hashOfConfig":"61"},{"size":1492,"mtime":1613532891535,"results":"71","hashOfConfig":"61"},{"size":1685,"mtime":1614055142257,"results":"72","hashOfConfig":"61"},{"size":6490,"mtime":1617123926492,"results":"73","hashOfConfig":"61"},{"size":3632,"mtime":1614056829171,"results":"74","hashOfConfig":"61"},{"size":153,"mtime":1613834976204,"results":"75","hashOfConfig":"61"},{"size":5996,"mtime":1616686467414,"results":"76","hashOfConfig":"61"},{"size":3860,"mtime":1616224328815,"results":"77","hashOfConfig":"61"},{"size":1226,"mtime":1613973250869,"results":"78","hashOfConfig":"61"},{"size":3308,"mtime":1616072061580,"results":"79","hashOfConfig":"61"},{"size":2019,"mtime":1614320841587,"results":"80","hashOfConfig":"61"},{"size":801,"mtime":1614180263361,"results":"81","hashOfConfig":"61"},{"size":1923,"mtime":1616159819780,"results":"82","hashOfConfig":"61"},{"size":1825,"mtime":1616399777488,"results":"83","hashOfConfig":"61"},{"size":12463,"mtime":1617132898761,"results":"84","hashOfConfig":"61"},{"size":1357,"mtime":1616088157509,"results":"85","hashOfConfig":"61"},{"size":607,"mtime":1612891556677,"results":"86","hashOfConfig":"61"},{"size":3280,"mtime":1617461249542,"results":"87","hashOfConfig":"61"},{"size":5491,"mtime":1616091223917,"results":"88","hashOfConfig":"61"},{"size":1375,"mtime":1616087471539,"results":"89","hashOfConfig":"61"},{"size":405,"mtime":1611510925830,"results":"90","hashOfConfig":"61"},{"size":492,"mtime":1611776768049,"results":"91","hashOfConfig":"61"},{"size":1651,"mtime":1614597863104,"results":"92","hashOfConfig":"61"},{"size":5130,"mtime":1616091846429,"results":"93","hashOfConfig":"61"},{"size":2780,"mtime":1616086399500,"results":"94","hashOfConfig":"61"},{"size":295,"mtime":1611994603881,"results":"95","hashOfConfig":"61"},{"size":1944,"mtime":1614597134816,"results":"96","hashOfConfig":"61"},{"size":605,"mtime":1611424594298,"results":"97","hashOfConfig":"61"},{"size":1537,"mtime":1614603116833,"results":"98","hashOfConfig":"61"},{"size":76,"mtime":1611107830684,"results":"99","hashOfConfig":"61"},{"size":570,"mtime":1612041624227,"results":"100","hashOfConfig":"61"},{"size":494,"mtime":1616088460708,"results":"101","hashOfConfig":"61"},{"size":5746,"mtime":1616045717954,"results":"102","hashOfConfig":"61"},{"size":120,"mtime":1616072176457,"results":"103","hashOfConfig":"61"},{"size":194,"mtime":1614061167935,"results":"104","hashOfConfig":"61"},{"size":105,"mtime":1612273248455,"results":"105","hashOfConfig":"61"},{"size":64,"mtime":1614537441142,"results":"106","hashOfConfig":"61"},{"size":6041,"mtime":1613205479720,"results":"107","hashOfConfig":"61"},{"size":1767,"mtime":1616134808177,"results":"108","hashOfConfig":"61"},{"size":1701,"mtime":1616437479314,"results":"109","hashOfConfig":"61"},{"size":1404,"mtime":1616039429308,"results":"110","hashOfConfig":"61"},{"size":8644,"mtime":1617128475578,"results":"111","hashOfConfig":"61"},{"size":1424,"mtime":1616087686689,"results":"112","hashOfConfig":"61"},{"size":2660,"mtime":1616399889297,"results":"113","hashOfConfig":"61"},{"size":6590,"mtime":1614180361422,"results":"114","hashOfConfig":"61"},{"size":609,"mtime":1616072179702,"results":"115","hashOfConfig":"61"},{"size":540,"mtime":1616085273236,"results":"116","hashOfConfig":"61"},{"size":1600,"mtime":1617460146259,"results":"117","hashOfConfig":"61"},{"size":309,"mtime":1616084573216,"results":"118","hashOfConfig":"61"},{"size":1654,"mtime":1616686535883,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"2j2yts",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"145"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"127"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"127"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"127"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"122"},"/media/leeon/coding/js/instagram-clone/web/src/index.js",[],["256","257"],"/media/leeon/coding/js/instagram-clone/web/src/Styles/GlobalStyles.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Apollo/LocalState.js",[],["258","259"],"/media/leeon/coding/js/instagram-clone/web/src/Routes/EditProfile.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Feed.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Header/index.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/index.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Avatar.js",[],["260","261"],"/media/leeon/coding/js/instagram-clone/web/src/Components/SharedQueries.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Header/HeaderContainer.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/Saved.js",[],["262","263"],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/ProfileNav.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/ProfileHeader.js",["264"],"import { gql, useMutation } from \"@apollo/client\";\nimport React, { useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport styled from \"styled-components\";\nimport Avatar, { MyAvatar } from \"../../Components/Avatar\";\nimport { CREATE_CHAT, MYAVATAR } from \"../../Components/SharedQueries\";\n\nconst UserInfo = styled.header`\n  background-color: ${(props) => props.theme.bgColor};\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 40px;\n  margin-top: 5px;\n`;\nconst AvatarWrapper = styled.div`\n  max-width: 293px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  border-radius: 50%;\n  ${(props) => props.onClick && \"cursor: pointer;\"}\n`;\n\nconst InfoWrapper = styled.section`\n  padding: 8px 20px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nconst Username = styled.h2`\n  font-size: 30px;\n`;\nconst Numbers = styled.ul`\n  margin-top: 20px;\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n`;\nconst NumberText = styled.li`\n  font-size: 16px;\n  strong {\n    font-weight: 600;\n  }\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n`;\nconst OtherInfo = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n`;\nconst Name = styled.h1`\n  font-weight: 600;\n  font-size: 18px;\n`;\nconst Bio = styled.span`\n  margin-top: 5px;\n`;\nconst FUEButton = styled.button`\n  height: 30px;\n  font-weight: 600;\n  text-transform: uppercase;\n  border: ${(props) => props.theme.boxBorder};\n  border-radius: ${(props) => props.theme.borderRadius};\n  background-color: ${(props) => {\n    if (props.name === \"follow\") return props.theme.blueColor;\n    else return `white`;\n  }};\n  color: ${(props) => {\n    if (props.name === \"follow\") return `white`;\n    else return `black`;\n  }};\n  :focus {\n    outline: none;\n  }\n  cursor: pointer;\n`;\nconst EditLink = styled(Link)`\n  cursor: pointer;\n`;\nexport const FOLLOW = gql`\n  mutation follow($username: String!) {\n    follow(username: $username)\n  }\n`;\nexport const UNFOLLOW = gql`\n  mutation unfollow($username: String!) {\n    unfollow(username: $username)\n  }\n`;\nconst CHANGE_AVATAR = gql`\n  mutation changeAvatar($avatar: Upload!) {\n    changeAvatar(avatar: $avatar) {\n      url\n      error\n    }\n  }\n`;\nfunction ProfileHeader({\n  id,\n  username,\n  isSelf,\n  avatar,\n  numberOfFollowings,\n  numberOfPosts,\n  numberOfFollowers,\n  fullname,\n  bio,\n  amIFollowing,\n}) {\n  const history = useHistory();\n  const [follow] = useMutation(FOLLOW, {\n    variables: { username },\n  });\n  const [unfollow] = useMutation(UNFOLLOW, {\n    variables: { username },\n  });\n  const [createChat] = useMutation(CREATE_CHAT, { variables: { toId: id } });\n  const inputFile = useRef(null);\n\n  const [avatarMutation] = useMutation(CHANGE_AVATAR);\n  const changeAvatar = async (e) => {\n    if (e.target.files[0]) {\n      await avatarMutation({\n        variables: { avatar: e.target.files[0] },\n        refetchQueries: [{ query: MYAVATAR }],\n        update: ({ loading }) => {\n          if (!loading)\n            toast.success(<div>Profile Photo has changed successfully!</div>);\n        },\n      });\n    }\n  };\n  const handleMessage = async () => {\n    // create chat room and push to the url\n    await createChat({\n      update: (_, { data }) => {\n        const chat = data?.createChat?.id;\n        history.push(`/direct/t/${chat}`);\n      },\n    });\n  };\n  const openFile = () => {\n    inputFile.current.click();\n  };\n  const onClick = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    switch (name) {\n      case \"follow\":\n        await follow({\n          update: (cache, { data }) => {\n            if (data?.follow) {\n              cache.modify({\n                id: `User:${id}`,\n                fields: {\n                  amIFollowing() {\n                    return true;\n                  },\n                  numberOfFollowers(prev) {\n                    return prev + 1;\n                  },\n                },\n              });\n            }\n          },\n        });\n        break;\n      case \"unfollow\":\n        await unfollow({\n          update: (cache, { data }) => {\n            if (data?.unfollow) {\n              cache.modify({\n                id: `User:${id}`,\n                fields: {\n                  amIFollowing() {\n                    return false;\n                  },\n                  numberOfFollowers(prev) {\n                    return prev - 1;\n                  },\n                },\n              });\n            }\n          },\n        });\n        break;\n\n      default:\n        //edit profile\n        break;\n    }\n  };\n  return (\n    <>\n      <input\n        onChange={changeAvatar}\n        type=\"file\"\n        ref={inputFile}\n        style={{ display: \"none\" }}\n        accept=\"image/*\"\n      />\n      <UserInfo>\n        {isSelf ? (\n          <AvatarWrapper onClick={openFile}>\n            <MyAvatar size={150} />\n          </AvatarWrapper>\n        ) : (\n          <AvatarWrapper>\n            <Avatar src={avatar} size={150} />\n          </AvatarWrapper>\n        )}\n\n        <InfoWrapper>\n          <Username>\n            {username}{\" \"}\n            {!isSelf ? (\n              //message link create and push\n              <FUEButton onClick={handleMessage}>message</FUEButton>\n            ) : (\n              <Link to=\"/p/create\">\n                <FUEButton>create post</FUEButton>\n              </Link>\n            )}\n            {isSelf ? (\n              <EditLink to=\"/account/edit\">\n                <FUEButton name=\"edit\" onClick={onClick}>\n                  edit profile\n                </FUEButton>\n              </EditLink>\n            ) : amIFollowing ? (\n              <FUEButton name=\"unfollow\" onClick={onClick}>\n                unfollow\n              </FUEButton>\n            ) : (\n              <FUEButton name=\"follow\" onClick={onClick}>\n                follow\n              </FUEButton>\n            )}\n          </Username>\n          <Numbers>\n            <NumberText>\n              게시물 <strong>{numberOfPosts}</strong>\n            </NumberText>\n            <NumberText>\n              팔로워 <strong>{numberOfFollowers}</strong>\n            </NumberText>\n            <NumberText>\n              팔로잉 <strong>{numberOfFollowings}</strong>\n            </NumberText>\n          </Numbers>\n          <OtherInfo>\n            <Name>{fullname}</Name>\n            <Bio>{bio}</Bio>\n          </OtherInfo>\n        </InfoWrapper>\n      </UserInfo>\n    </>\n  );\n}\n\nexport default ProfileHeader;\n","/media/leeon/coding/js/instagram-clone/web/src/Components/Header/SearchInput.js",["265"],"import { gql, useLazyQuery } from \"@apollo/client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport useInput from \"../../Hooks/useInput\";\nimport SearchMenu from \"./SearchMenu\";\nimport { Menu } from \"./Styles\";\n\nconst SEARCH = gql`\n  query searchUsers($query: String!) {\n    searchUsers(query: $query) {\n      username\n      avatar\n      fullname\n    }\n  }\n`;\nconst SearchBoxCover = styled.div`\n  ${(props) => props.theme.whiteBox}\n  background-color: ${(props) => props.theme.bgColor};\n  height: 28px;\n  width: 215px;\n  margin: auto;\n  flex: 0 1 auto;\n  display: flex;\n  padding: 0;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: text;\n`;\nconst SearchText = styled.div`\n  justify-content: center;\n  text-align: center;\n  width: 170px;\n  display: ${(props) => {\n    return props.showing ? `block` : `none`;\n  }};\n`;\nconst SearchBox = styled.input`\n  border: 0;\n  background-color: ${(props) => props.theme.bgColor};\n  height: 25px;\n  width: 170px;\n  margin: auto;\n  display: ${(props) => {\n    return props.showing ? `block` : `none`;\n  }};\n  position: absolute;\n  font-size: 12px;\n  z-index: 3;\n`;\nconst CancelSearch = styled.button`\n  display: ${(props) => {\n    return props.showing ? `flex` : `none`;\n  }};\n  align-self: flex-end;\n  transform: translate(-50%);\n  border: 0;\n  border-radius: 50%;\n  background-color: ${(props) => props.theme.darkGreyColor};\n  color: white;\n  font-weight: 700;\n  z-index: 3;\n  cursor: pointer;\n  :focus {\n    outline: none;\n  }\n`;\nfunction SearchInput() {\n  const searchInput = useInput(\"\");\n  const searchInputRef = useRef();\n  const [search, setSearch] = useState(false);\n  const [searchMenu, setSearchMenu] = useState(false);\n  const [searchUsers, { data, loading }] = useLazyQuery(SEARCH, {\n    variables: {\n      query: searchInput.value,\n    },\n  });\n  const HandleOnChange = (e) => {\n    if (e.target.value === \"\") {\n      setSearchMenu(false);\n    } else if (search) {\n      setSearchMenu(true);\n      searchUsers();\n    }\n    searchInput.onChange(e);\n  };\n  useEffect(() => {\n    const handleSearch = (e) => {\n      if (!searchInputRef.current.contains(e.target)) {\n        setSearch(false);\n        setSearchMenu(false);\n      }\n    };\n    const hadleLoad = () => {\n      searchInput.setValue(\"\");\n    };\n    if (search) {\n      window.addEventListener(\"click\", handleSearch);\n      searchInputRef.current.focus();\n    }\n    if (searchInput.value) window.addEventListener(\"popstate\", hadleLoad);\n    return () => {\n      if (search) window.removeEventListener(\"click\", handleSearch);\n      if (searchInput.value) window.removeEventListener(\"popstate\", hadleLoad);\n    };\n  }, [search, searchInput]);\n  return (\n    <SearchBoxCover\n      onClick={() => {\n        setSearch(true);\n        if (searchInput.value !== \"\") {\n          setSearchMenu(true);\n        }\n      }}\n    >\n      <SearchText showing={!search}>\n        {searchInput.value === \"\" ? \"SEARCH\" : `${searchInput.value}`}\n      </SearchText>\n      <SearchBox\n        ref={searchInputRef}\n        showing={search}\n        placeholder=\"search\"\n        value={searchInput.value}\n        onChange={HandleOnChange}\n      />\n      <CancelSearch\n        showing={search}\n        onClick={() => {\n          setSearch(false);\n          searchInput.setValue(\"\");\n        }}\n      >\n        x\n      </CancelSearch>\n      <Menu showing={searchMenu}>\n        {data && !loading && <SearchMenu users={data.searchUsers} />}\n      </Menu>\n    </SearchBoxCover>\n  );\n}\n\nexport default SearchInput;\n",["266","267"],"/media/leeon/coding/js/instagram-clone/web/src/Components/Header/Styles.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Header/NotificationMenu.js",["268","269","270","271","272","273"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\nimport Avatar from \"../Avatar\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { timeSince } from \"../Util\";\nimport { FOLLOW, UNFOLLOW } from \"../../Routes/Profile/ProfileHeader\";\nimport ToggleFollow from \"../ToggleFollow\";\n\nconst NEW_NOTIFICATION = gql`\n  subscription newNotification {\n    newNotification {\n      id\n      newComment {\n        text\n        user {\n          username\n          avatar\n        }\n        post {\n          id\n          photos {\n            url\n          }\n        }\n      }\n      newLike {\n        user {\n          username\n          avatar\n        }\n        post {\n          id\n          photos {\n            url\n          }\n        }\n      }\n      createdAt\n    }\n  }\n`;\nconst Menu = styled.div`\n  position: absolute;\n  top: 150%;\n  left: -40%;\n  z-index: 3;\n  width: 500px;\n  height: 370px;\n  border-radius: 6px;\n  box-shadow: 0 0 5px 1px rgba(var(--jb7, 0, 0, 0), 0.0975);\n  transition: opacity 75ms linear, transform 38ms ease-out,\n    -webkit-transform 38ms ease-out;\n  transform-origin: top center;\n  align-items: stretch;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding-top: 10px;\n`;\nconst Items = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\nconst Notification = styled.li`\n  display: flex;\n  height: 68px;\n  padding: 9px 16px;\n  align-items: center;\n`;\nconst Content = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\nconst Username = styled.span`\n  margin-right: 6px;\n  font-size: 15px;\n  font-weight: 600;\n  padding-left: 5px;\n  margin-left: -5px;\n`;\nconst Text = styled.div`\n  padding: 0 12px;\n  width: 340px;\n  font-size: 14px;\n  display: block;\n  overflow: hidden;\n  text-align: left;\n  b {\n    padding: 0 5px;\n    color: gray;\n    font-size: 13px;\n  }\n  strong {\n    white-space: pre-wrap;\n    overflow-wrap: anywhere;\n    text-overflow: ellipsis;\n    word-break: break-all;\n  }\n`;\nconst PostImg = styled.img`\n  width: 44px;\n  height: 44px;\n  display: flex;\n  margin-left: auto;\n`;\nconst FollowButton = styled.button`\n  background-color: ${(props) => props.theme.blueColor};\n  color: white;\n  padding: 7px 4px;\n  border-radius: 5px;\n  display: flex;\n  margin-left: auto;\n  border: 0;\n  font-size: 9px;\n  text-transform: uppercase\n    ${(props) =>\n      props.loading === \"true\"\n        ? `  opacity: .5;\n`\n        : null};\n`;\n\nfunction NotificationMenu({ notification, subscribeToMore }) {\n  const history = useHistory();\n  useEffect(() => {\n    let unsub = subscribeToMore({\n      document: NEW_NOTIFICATION,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n        const new_notification = subscriptionData.data.newNotification;\n        return Object.assign({}, prev, {\n          notification: [new_notification, ...prev.notification],\n        });\n      },\n    });\n    return () => unsub();\n  }, [subscribeToMore]);\n  return (\n    <Menu>\n      <Items>\n        {notification.map((n, index) => {\n          const ago = timeSince(n.createdAt);\n          let body;\n          if (n.newComment) {\n            body = (\n              <Link to={`/p/${n.newComment.post.id}`} key={index}>\n                <Notification>\n                  <Avatar src={n.newComment.user.avatar} size={44} />\n                  <Content>\n                    <Text>\n                      <Username\n                        onClick={() => {\n                          history.push(`/${n.newComment.user.username}`);\n                        }}\n                      >\n                        {n.newComment.user.username}\n                      </Username>\n                      <strong>{`left a new comment: ${\n                        n.newComment.text.length > 100\n                          ? n.newComment.text.slice(0, 100) + \"...\"\n                          : n.newComment.text\n                      }`}</strong>\n                      <b>{ago}</b>\n                    </Text>\n                  </Content>\n                  <PostImg src={n.newComment.post.photos[0].url} />\n                </Notification>\n              </Link>\n            );\n          } else if (n.newLike) {\n            body = (\n              <Link to={`/p/${n.newLike.post.id}`} key={index}>\n                <Notification>\n                  <Avatar src={n.newLike.user.avatar} size={44} />\n                  <Content>\n                    <Text>\n                      <Username\n                        onClick={() => {\n                          history.push(`/${n.newLike.user.username}`);\n                        }}\n                      >\n                        {n.newLike.user.username}{\" \"}\n                      </Username>\n                      <strong>{\"liked your post\"}</strong>\n                      <b>{ago}</b>\n                    </Text>\n                  </Content>\n                  <PostImg src={n.newLike.post.photos[0].url} />\n                </Notification>\n              </Link>\n            );\n          } else if (n.newFollower) {\n            body = (\n              <Notification key={index}>\n                <Avatar src={n.newFollower.avatar} size={44} />\n                <Content>\n                  <Text>\n                    <Username\n                      onClick={() => {\n                        history.push(`/${n.newFollower.username}`);\n                      }}\n                    >\n                      {n.newFollower.username}\n                    </Username>\n                    <strong>{\"started following you\"}</strong>\n                    <b>{ago}</b>\n                  </Text>\n                </Content>\n                <ToggleFollow username={n.newFollower.username} />\n              </Notification>\n            );\n          }\n          return body;\n        })}\n      </Items>\n    </Menu>\n  );\n}\n\nexport default NotificationMenu;\n","/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/PostPhotos.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Auth/AuthQueries.js",[],["274","275"],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/PostHeader.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Header/SearchMenu.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Input.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/ModalMenu.js",[],["276","277"],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/index.js",[],["278","279"],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/PostContainer.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/App.js",["280","281"],"import { gql, useQuery, useReactiveVar } from \"@apollo/client\";\nimport React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { isLoggedInVar } from \"../Apollo/LocalState\";\nimport GlobalStyles from \"../Styles/GlobalStyles\";\nimport Theme from \"../Styles/Theme\";\nimport AppRouter from \"./Router\";\n\nconst Wrapper = styled.div`\n  min-height: 100%;\n  margin: auto;\n  max-width: 935px;\n  padding-top: 55px;\n  width: 100%;\n`;\nconst StyledContainer = styled(ToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {\n  }\n  .Toastify__toast {\n  }\n  .Toastify__toast--error {\n    text-align: center;\n  }\n  .Toastify__toast--warning {\n  }\n  .Toastify__toast--success {\n    text-align: center;\n  }\n  .Toastify__toast-body {\n    white-space: pre-line;\n  }\n  .Toastify__progress-bar {\n  }\n`;\nconst App = () => {\n  const isLoggedIn = useReactiveVar(isLoggedInVar);\n  return (\n    <ThemeProvider theme={Theme}>\n      <GlobalStyles />\n      <Router>\n        <Wrapper>\n          <AppRouter isLoggedIn={isLoggedIn} />\n        </Wrapper>\n      </Router>\n      <StyledContainer position={toast.POSITION.TOP_CENTER} />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","/media/leeon/coding/js/instagram-clone/web/src/Components/FeedActions.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Footer.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Direct/DirectContainer.js",["282"],"import { gql, useQuery, useReactiveVar } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport { myUsernameVar } from \"../../Apollo/LocalState\";\nimport Avatar from \"../../Components/Avatar\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport ChatRoom from \"./ChatRoom\";\nimport { timeSince } from \"../../Components/Util\";\nimport { Username } from \"../../Styles/Username\";\nimport NewMessageModal from \"./NewMessageModal\";\nexport const CHAT_LIST = gql`\n  query chatList {\n    chatList {\n      id\n      updatedAt\n      participants {\n        username\n        avatar\n      }\n      participantsExceptMe {\n        username\n        avatar\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  ${(props) => props.theme.whiteBox};\n  margin-top: 20px;\n  display: flex;\n  flex-direction: row;\n  height: 883px;\n`;\nconst ChatNav = styled.div`\n  border-right: 1px solid #dbdbdb;\n  width: 350px;\n`;\nconst ChatList = styled.ul`\n  margin-top: 8px;\n`;\nconst List = styled.li`\n  padding: 8px 20px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 72px;\n  :hover {\n    background-color: #efefef;\n  }\n  cursor: pointer;\n`;\nexport const Name = styled(Username)`\n  margin: 13px;\n`;\nconst Updated = styled.div`\n  margin-left: auto;\n`;\nconst Header = styled.div`\n  padding: 20px;\n  width: 100%;\n  height: 60px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  vertical-align: center;\n  border-bottom: 1px solid #dbdbdb;\n  z-index: 3;\n`;\nconst Chat = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n`;\nconst ChatWrapper = styled.div`\n  max-height: 883px;\n`;\n\nconst NewChat = styled.div`\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n`;\nconst NewChatMessage = styled.div`\n  margin-bottom: 25px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  strong {\n    font-size: 27px;\n    text-transform: capitalize;\n    margin-bottom: 8px;\n  }\n`;\nconst NewChatButton = styled.button`\n  margin: auto;\n  display: flex;\n  text-transform: capitalize;\n  border: 0;\n  border-radius: 5px;\n  color: white;\n  height: 30px;\n  line-height: 30px;\n  padding: 0 10px;\n  font-weight: 600;\n  font-size: 14px;\n  vertical-align: center;\n  background-color: ${(props) => props.theme.blueColor};\n`;\nconst IconButton = styled.button`\n  margin-left: auto;\n`;\nfunction DirectContainer() {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const [chatId, setChatId] = useState(\"\");\n  const [modal, setModal] = useState(false);\n  const myUsername = useReactiveVar(myUsernameVar);\n  const { data, loading } = useQuery(CHAT_LIST);\n\n  useEffect(() => {\n    if (pathname.startsWith(\"/direct/t/\")) {\n      setChatId(pathname.substr(10));\n    }\n  }, [pathname]);\n  if (!data || loading) return <Loader />;\n  else {\n    const { chatList } = data;\n    return (\n      <>\n        <NewMessageModal showing={modal} setModal={setModal} />\n        <Wrapper>\n          <ChatNav>\n            <Header>\n              header{\" \"}\n              <IconButton\n                onClick={() => {\n                  setModal(true);\n                }}\n              >\n                new message\n              </IconButton>\n            </Header>\n            <ChatList>\n              {chatList.map((chat, index) => {\n                let updatedSince = timeSince(chat.updatedAt);\n                return (\n                  <List\n                    key={index}\n                    onClick={() => {\n                      history.push(`/direct/t/${chat.id}`);\n                    }}\n                  >\n                    {chat.participantsExceptMe.length > 1 ? (\n                      chat.participantsExceptMe.map((person, index) => {\n                        if (index !== chat.participantsExceptMe.length - 1) {\n                          return <Avatar size={30} src={person.avatar} />;\n                        } else {\n                          return <Avatar size={30} src={person.avatar} />;\n                        }\n                      })\n                    ) : (\n                      <Avatar\n                        size={56}\n                        src={chat.participantsExceptMe[0].avatar}\n                      />\n                    )}\n\n                    <Name>\n                      {chat.participantsExceptMe.map((person, index) => {\n                        if (index !== chat.participantsExceptMe.length - 1) {\n                          return `${person.username}, `;\n                        } else {\n                          return `${person.username}`;\n                        }\n                      })}\n                    </Name>\n                    <Updated>{updatedSince}</Updated>\n                  </List>\n                );\n              })}\n            </ChatList>\n          </ChatNav>\n          <Chat>\n            {pathname.startsWith(\"/direct/t/\") ? (\n              <ChatWrapper>\n                <ChatRoom chatId={chatId} />\n              </ChatWrapper>\n            ) : (\n              <NewChat>\n                <NewChatMessage>\n                  <strong>your messages</strong>\n                  Send private photos and messages to a friend or group.\n                </NewChatMessage>\n                <NewChatButton>send Message</NewChatButton>\n              </NewChat>\n            )}\n          </Chat>\n        </Wrapper>\n      </>\n    );\n  }\n}\n\nexport default DirectContainer;\n","/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/Posted.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/FeedStory.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Hooks/useWidth.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Util.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Direct/ChatRoom.js",["283"],"import { gql, useMutation, useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport styled from \"styled-components\";\nimport Avatar from \"../../Components/Avatar\";\nimport useInput from \"../../Hooks/useInput\";\nimport { CHAT_LIST, Name } from \"./DirectContainer\";\nimport PropTypes from \"prop-types\";\nimport Messages from \"./Messages\";\nimport { Link } from \"react-router-dom\";\nconst GET_MESSAGES = gql`\n  query getMessages($chatId: String!, $limit: Int, $offset: Int) {\n    getMessages(chatId: $chatId, limit: $limit, offset: $offset) {\n      text\n      from {\n        username\n        avatar\n      }\n      createdAt\n    }\n  }\n`;\nconst SEND_MESSAGE = gql`\n  mutation sendMessage($chatId: String!, $text: String!) {\n    sendMessage(chatId: $chatId, text: $text)\n  }\n`;\nconst GET_CHAT = gql`\n  query getIntoChat($chatId: String!) {\n    getIntoChat(chatId: $chatId) {\n      participantsExceptMe {\n        username\n        avatar\n      }\n    }\n  }\n`;\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n`;\nconst Header = styled.div`\n  padding: 20px;\n  width: 100%;\n  height: 60px;\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  text-align: center;\n  vertical-align: center;\n  border-bottom: 1px solid #dbdbdb;\n  z-index: 3;\n`;\nconst InputWrapper = styled.div`\n  border: 1px solid #dbdbdb;\n  display: flex;\n  flex-direction: row;\n  border-radius: 30px;\n  margin: 20px;\n  flex: 0 0 auto;\n  order: 2;\n`;\nconst SendMessage = styled(TextareaAutosize)`\n  font-size: 14px;\n  line-height: 18px;\n  background-color: transparent;\n  border: 0;\n  padding: 8px 12px;\n  width: 100%;\n  resize: none;\n  :focus {\n    outline: none;\n  }\n`;\nconst SendButton = styled.button`\n  border: 0;\n  background-color: transparent;\n  padding: 0 12px;\n  font-size: 16px;\n  font-weight: 600;\n  color: ${(props) => props.theme.blueColor};\n  cursor: pointer;\n  :focus {\n    outline: none;\n  }\n  ${(props) => {\n    if (props.isEmpty) {\n      return `opacity: 0.3;  pointer-events: none;`;\n    }\n  }};\n`;\n\nfunction ChatRoom({ chatId }) {\n  const { data, subscribeToMore, loading } = useQuery(GET_MESSAGES, {\n    variables: { chatId },\n  });\n  const { data: chatData } = useQuery(GET_CHAT, {\n    variables: { chatId },\n  });\n  const messageInput = useInput();\n  const [sendMessage] = useMutation(SEND_MESSAGE, {\n    variables: { chatId, text: messageInput.value },\n    refetchQueries: [{ query: CHAT_LIST }],\n  });\n  const onKeyDown = async (e) => {\n    const { keyCode } = e;\n    if (keyCode === 13 && !e.shiftKey) {\n      e.preventDefault();\n      await sendMessage({\n        update: (_, { loading }) => {\n          if (!loading) messageInput.setValue(\"\");\n        },\n      });\n    }\n  };\n  const onClick = async (e) => {\n    e.preventDefault();\n    await sendMessage({\n      update: (_, { loading }) => {\n        if (!loading) messageInput.setValue(\"\");\n      },\n    });\n  };\n  if (loading || !data || !chatData) return null;\n  else {\n    const { getIntoChat } = chatData;\n    return (\n      <>\n        <Header>\n          <>\n            {getIntoChat.participantsExceptMe.length > 1 ? (\n              <>\n                {getIntoChat.participantsExceptMe.map((person, index) => {\n                  if (index !== getIntoChat.participantsExceptMe.length - 1) {\n                    return <Avatar size={30} src={person.avatar} />;\n                  } else {\n                    return <Avatar size={30} src={person.avatar} />;\n                  }\n                })}\n                <Name>\n                  {getIntoChat.participantsExceptMe.map((person, index) => {\n                    if (index !== getIntoChat.participantsExceptMe.length - 1) {\n                      return `${person.username}, `;\n                    } else {\n                      return `${person.username}`;\n                    }\n                  })}\n                </Name>\n              </>\n            ) : (\n              <>\n                <Link to={`/${getIntoChat.participantsExceptMe[0].username}`}>\n                  <Avatar\n                    size={28}\n                    src={getIntoChat.participantsExceptMe[0].avatar}\n                  />\n                </Link>\n                <Link to={`/${getIntoChat.participantsExceptMe[0].username}`}>\n                  <Name>{getIntoChat.participantsExceptMe[0].username}</Name>\n                </Link>\n              </>\n            )}\n          </>\n        </Header>\n        <Wrapper>\n          <Messages\n            data={data}\n            subscribeToMore={subscribeToMore}\n            chatId={chatId}\n          />\n          <InputWrapper>\n            <SendMessage\n              maxRows={3}\n              placeholder={\"Message...\"}\n              value={messageInput.value}\n              onChange={messageInput.onChange}\n              name=\"message\"\n              onKeyDown={onKeyDown}\n            />\n            <SendButton onClick={onClick} isEmpty={messageInput.value === \"\"}>\n              Send\n            </SendButton>\n          </InputWrapper>\n        </Wrapper>\n      </>\n    );\n  }\n}\n\nexport default ChatRoom;\n","/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/PostIcons.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Hooks/useInput.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Direct/Messages.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Button.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Router.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Auth/index.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Loader.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/ProfileStyles.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Auth/AuthContainer.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Styles/Username.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Styles/Divider.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Explore.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Direct/index.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Icons.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Direct/NewMessageModal.js",[],["284","285"],"/media/leeon/coding/js/instagram-clone/web/src/Apollo/Client.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Modal.js",[],["286","287"],"/media/leeon/coding/js/instagram-clone/web/src/Routes/CreatePost.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Profile/ProfilePosts.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Routes/Post/PostAddComment.js",["288"],"import { useMutation } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport styled from \"styled-components\";\nimport { ADD_COMMENT } from \"../../Components/SharedQueries\";\n\nconst Wrapper = styled.section`\n  bottom: 0;\n  margin-top: 8px;\n  border-top: 1px solid rgba(239, 239, 239, 1);\n  order: ${(props) => props.order};\n  align-items: stretch;\n  box-sizing: border-box;\n  display: flex;\n  position: relative;\n  flex-shrink: 0;\n  font-size: 14px;\n`;\nconst AddComment = styled.form`\n  padding: 0 16px;\n  border: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  vertical-align: center;\n  align-items: center;\n`;\nconst InputComment = styled(TextareaAutosize)`\n  width: 100%;\n  font-size: 14px;\n  height: 20px;\n  border: 0;\n  resize: none;\n  overflow: hidden;\n  &:focus {\n    outline: none;\n  }\n`;\nconst PostButton = styled.button`\n  border: 0;\n  border-radius: ${(props) => props.theme.borderRadius};\n  background-color: white;\n  height: 35px;\n  font-size: 15px;\n  padding: 0;\n  color: ${(props) => props.theme.blueColor};\n  text-align: center;\n  font-weight: 600;\n  text-transform: capitalize;\n  ${(props) => {\n    if (props.isEmpty) {\n      return `opacity: 0.3;  pointer-events: none;`;\n    }\n  }};\n  :focus {\n    outline: none;\n  }\n`;\nfunction PostAddComment({ order, id, newComments, setNewCommentAdded }) {\n  const { register, watch, handleSubmit, setValue } = useForm();\n  const text = watch(\"text\");\n  const [addComment] = useMutation(ADD_COMMENT, {\n    variables: { text, postId: id },\n  });\n\n  const handleAddComment = async (e) => {\n    await addComment({\n      update: (_, { data }) => {\n        newComments.push(data.addComment);\n        setNewCommentAdded(true);\n      },\n    });\n    setValue(\"text\", \"\");\n  };\n\n  const onKeyDown = async (e) => {\n    const { keyCode } = e;\n    if (keyCode === 13 && !e.shiftKey) {\n      e.preventDefault();\n      await handleAddComment();\n      setValue(\"text\", \"\");\n    }\n  };\n  useEffect(() => {\n    if (watch(\"text\").includes(\"@\")) {\n      console.log(\"@\");\n    }\n  }, [watch]);\n  return (\n    <Wrapper order={order}>\n      <AddComment onSubmit={handleSubmit(handleAddComment)}>\n        <InputComment\n          ref={register}\n          name=\"text\"\n          maxRows={3}\n          onKeyDown={onKeyDown}\n        />\n        <PostButton\n          ref={register}\n          name=\"button\"\n          text={\"post\"}\n          isEmpty={text === \"\" || text === undefined}\n        >\n          post\n        </PostButton>\n      </AddComment>\n    </Wrapper>\n  );\n}\n\nexport default PostAddComment;\n","/media/leeon/coding/js/instagram-clone/web/src/Routes/Auth/AuthPresenter.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Styles/Theme.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Hooks/useScrollEnd.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Header/AvatarMenu.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/Spinner.js",[],"/media/leeon/coding/js/instagram-clone/web/src/Components/ToggleFollow.js",["289"],"import { gql, useMutation, useQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FOLLOW, UNFOLLOW } from \"../Routes/Profile/ProfileHeader\";\n\nconst GET_USER = gql`\n  query seeProfile($username: String!) {\n    seeProfile(username: $username) {\n      amIFollowing\n    }\n  }\n`;\nconst FollowButton = styled.button`\n  background-color: ${(props) =>\n    props.amIFollowing ? props.theme.grayColor : props.theme.blueColor};\n  color: ${(props) => (props.amIFollowing ? \"black\" : \"white\")};\n  padding: 7px 4px;\n  border-radius: 5px;\n  display: flex;\n  margin-left: auto;\n  border: 0;\n  font-size: 9px;\n  text-transform: uppercase\n    ${(props) =>\n      props.loading === \"true\"\n        ? `  opacity: .5;\n`\n        : null};\n  :focus {\n    outline: none;\n  }\n`;\nfunction ToggleFollow({ username }) {\n  const { data, refetch } = useQuery(GET_USER, { variables: { username } });\n  const [amIFollowing, setAmIFollowing] = useState(\n    data?.seeProfile?.amIFollowing\n  );\n  const [follow] = useMutation(FOLLOW, {\n    variables: { username },\n  });\n  const [unfollow] = useMutation(UNFOLLOW, {\n    variables: { username },\n  });\n  const toggleFollow = async () => {\n    if (amIFollowing) {\n      await unfollow();\n      setAmIFollowing(false);\n    } else {\n      await follow();\n      setAmIFollowing(true);\n    }\n  };\n  useEffect(() => {\n    setAmIFollowing(data?.seeProfile?.amIFollowing);\n  }, [data]);\n  return (\n    <FollowButton onClick={toggleFollow} amIFollowing={amIFollowing}>\n      {amIFollowing ? \"unfollow\" : \"follow\"}\n    </FollowButton>\n  );\n}\n\nexport default ToggleFollow;\n",{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"290","replacedBy":"294"},{"ruleId":"292","replacedBy":"295"},{"ruleId":"290","replacedBy":"296"},{"ruleId":"292","replacedBy":"297"},{"ruleId":"290","replacedBy":"298"},{"ruleId":"292","replacedBy":"299"},{"ruleId":"300","severity":1,"message":"301","line":2,"column":25,"nodeType":"302","messageId":"303","endLine":2,"endColumn":33},{"ruleId":"300","severity":1,"message":"304","line":3,"column":10,"nodeType":"302","messageId":"303","endLine":3,"endColumn":21},{"ruleId":"290","replacedBy":"305"},{"ruleId":"292","replacedBy":"306"},{"ruleId":"300","severity":1,"message":"301","line":1,"column":28,"nodeType":"302","messageId":"303","endLine":1,"endColumn":36},{"ruleId":"300","severity":1,"message":"307","line":3,"column":15,"nodeType":"302","messageId":"303","endLine":3,"endColumn":26},{"ruleId":"300","severity":1,"message":"308","line":3,"column":28,"nodeType":"302","messageId":"303","endLine":3,"endColumn":36},{"ruleId":"300","severity":1,"message":"309","line":7,"column":10,"nodeType":"302","messageId":"303","endLine":7,"endColumn":16},{"ruleId":"300","severity":1,"message":"310","line":7,"column":18,"nodeType":"302","messageId":"303","endLine":7,"endColumn":26},{"ruleId":"300","severity":1,"message":"311","line":111,"column":7,"nodeType":"302","messageId":"303","endLine":111,"endColumn":19},{"ruleId":"290","replacedBy":"312"},{"ruleId":"292","replacedBy":"313"},{"ruleId":"290","replacedBy":"314"},{"ruleId":"292","replacedBy":"315"},{"ruleId":"290","replacedBy":"316"},{"ruleId":"292","replacedBy":"317"},{"ruleId":"300","severity":1,"message":"318","line":1,"column":10,"nodeType":"302","messageId":"303","endLine":1,"endColumn":13},{"ruleId":"300","severity":1,"message":"308","line":1,"column":15,"nodeType":"302","messageId":"303","endLine":1,"endColumn":23},{"ruleId":"300","severity":1,"message":"319","line":120,"column":9,"nodeType":"302","messageId":"303","endLine":120,"endColumn":19},{"ruleId":"300","severity":1,"message":"320","line":8,"column":8,"nodeType":"302","messageId":"303","endLine":8,"endColumn":17},{"ruleId":"290","replacedBy":"321"},{"ruleId":"292","replacedBy":"322"},{"ruleId":"290","replacedBy":"323"},{"ruleId":"292","replacedBy":"324"},{"ruleId":"300","severity":1,"message":"301","line":2,"column":28,"nodeType":"302","messageId":"303","endLine":2,"endColumn":36},{"ruleId":"300","severity":1,"message":"325","line":34,"column":17,"nodeType":"302","messageId":"303","endLine":34,"endColumn":24},"no-native-reassign",["326"],"no-negated-in-lhs",["327"],["326"],["327"],["326"],["327"],["326"],["327"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.",["326"],["327"],"'useMutation' is defined but never used.","'useQuery' is defined but never used.","'FOLLOW' is defined but never used.","'UNFOLLOW' is defined but never used.","'FollowButton' is assigned a value but never used.",["326"],["327"],["326"],["327"],["326"],["327"],"'gql' is defined but never used.","'myUsername' is assigned a value but never used.","'PropTypes' is defined but never used.",["326"],["327"],["326"],["327"],"'refetch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]